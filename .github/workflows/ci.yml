name: CI

on: [push, pull_request]

jobs:
  build:
    name: ${{ matrix.platform.name }} ${{ matrix.config.name }}
    runs-on: ${{ matrix.platform.os }}

    strategy:
      fail-fast: false
      matrix:
        platform:
        - { name: Windows VS2017, os: windows-2016,   artifacts-name: windown-vs2017 }
        - { name: Windows VS2019, os: windows-latest, artifacts-name: windown-vs2019 }
        - { name: Linux GCC,      os: ubuntu-latest,  artifacts-name: linux-gcc }
        - { name: Linux Clang,    os: ubuntu-latest,  artifacts-name: linux-clang, flags: -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ }
        - { name: MacOS XCode,    os: macos-latest,   artifacts-name: macos-xcode, flags: -DSFML_BUILD_FRAMEWORKS=FALSE -DCMAKE_OSX_ARCHITECTURES=arm64\;x86_64, prefix: sudo }
    steps:
    - name: Install Linux Dependencies
      if: runner.os == 'Linux'
      run: sudo apt-get update && sudo apt-get install libxrandr-dev libxcursor-dev libudev-dev libopenal-dev libflac-dev libvorbis-dev libgl1-mesa-dev libegl1-mesa-dev

    - name: Checkout SFML
      uses: actions/checkout@v2
      with:
        repository: SFML/SFML
        ref: 0fe1626a1fe8bf493a98958b1d3ef9559ce7c36c
        path: SFML

    - name: Configure SFML CMake
      shell: bash
      run: cmake -S $GITHUB_WORKSPACE/SFML -B $GITHUB_WORKSPACE/SFML/build -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/SFML/install -DBUILD_SHARED_LIBS=TRUE -DSFML_BUILD_EXAMPLES=FALSE -DSFML_BUILD_TEST_SUITE=FALSE -DCMAKE_VERBOSE_MAKEFILE=ON ${{matrix.platform.flags}}

    - name: Build SFML
      shell: bash
      run: ${{matrix.platform.prefix}} cmake --build $GITHUB_WORKSPACE/SFML/build --config Release --target install

    - name: Checkout CSFML
      uses: actions/checkout@v2
      with:
        path: CSFML

    - name: Configure CSFML CMake
      shell: bash
      run: cmake -S $GITHUB_WORKSPACE/CSFML -B $GITHUB_WORKSPACE/CSFML/build -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/CSFML/install -DBUILD_SHARED_LIBS=TRUE -DCSFML_LINK_SFML_STATICALLY=FALSE -DSFML_DIR=$GITHUB_WORKSPACE/SFML/install/lib/cmake/SFML -DCMAKE_VERBOSE_MAKEFILE=ON ${{matrix.platform.flags}}

    - name: Build CSFML
      shell: bash
      run: cmake --build $GITHUB_WORKSPACE/CSFML/build --config Release --target install

    - name: Build CSFML
      shell: bash
      run: cmake --build $GITHUB_WORKSPACE/CSFML/build --config Release --target install

    - name: Install .NET
      if: runner.os == 'macOS'
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.0.x'

    - name: check dir ../../install/lib
      shell: bash
      if: runner.os == 'macOS'
      working-directory: ./CSFML/test/dotnet-interop
      run: ls ../../install/lib

    - name: check dir ../../../SFML/install/lib
      shell: bash
      if: runner.os == 'macOS'
      working-directory: ./CSFML/test/dotnet-interop
      run: ls ../../../SFML/install/lib

    - name: check ../../../SFML/install/lib/libsfml-system.2.5.dylib
      shell: bash
      if: runner.os == 'macOS'
      working-directory: ./CSFML/test/dotnet-interop
      run: otool -l ../../../SFML/install/lib/libsfml-system.2.5.dylib

    - name: check /usr/lib/
      if: runner.os == 'macOS'
      working-directory: ./CSFML/test/dotnet-interop
      run: ls /usr/lib/

    - name: .NET build
      shell: bash
      if: runner.os == 'macOS'
      working-directory: ./CSFML/test/dotnet-interop
      run: DYLD_PRINT_LIBRARIES=1 DYLD_FALLBACK_LIBRARY_PATH=../../install/lib:../../../SFML/install/lib dotnet build

    - name: .NET run
      shell: bash
      if: runner.os == 'macOS'
      working-directory: ./CSFML/test/dotnet-interop
      run: DYLD_PRINT_LIBRARIES=1 DYLD_FALLBACK_LIBRARY_PATH=../../install/lib:../../../SFML/install/lib dotnet run --no-build

    - uses: actions/upload-artifact@v2
      with:
        name: csmfl-${{ matrix.platform.artifacts-name }}
        path: CSFML/install